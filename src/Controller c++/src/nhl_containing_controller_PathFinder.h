/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class nhl_containing_controller_PathFinder */

#ifndef _Included_nhl_containing_controller_PathFinder
#define _Included_nhl_containing_controller_PathFinder
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     nhl_containing_controller_PathFinder
 * Method:    initPath
 * Signature: (Ljava/awt/Dimension;)V
 */
JNIEXPORT void JNICALL Java_nhl_containing_controller_PathFinder_initPath__Ljava_awt_Dimension_2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     nhl_containing_controller_PathFinder
 * Method:    initPath
 * Signature: ([Lnhl/containing/controller/simulation/Node;)V
 */
JNIEXPORT void JNICALL Java_nhl_containing_controller_PathFinder_initPath___3Lnhl_containing_controller_simulation_Node_2
  (JNIEnv *, jclass, jobjectArray);

/*
 * Class:     nhl_containing_controller_PathFinder
 * Method:    getPath
 * Signature: (IIF)[I
 */
JNIEXPORT jintArray JNICALL Java_nhl_containing_controller_PathFinder_getPath
  (JNIEnv *, jclass, jint, jint, jfloat);

/*
 * Class:     nhl_containing_controller_PathFinder
 * Method:    setOccupied
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_nhl_containing_controller_PathFinder_setOccupied__IZ
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     nhl_containing_controller_PathFinder
 * Method:    setOccupied
 * Signature: (Ljava/awt/Point;Z)V
 */
JNIEXPORT void JNICALL Java_nhl_containing_controller_PathFinder_setOccupied__Ljava_awt_Point_2Z
  (JNIEnv *, jclass, jobject, jboolean);

/*
 * Class:     nhl_containing_controller_PathFinder
 * Method:    setOccupied
 * Signature: (IIZ)V
 */
JNIEXPORT void JNICALL Java_nhl_containing_controller_PathFinder_setOccupied__IIZ
  (JNIEnv *, jclass, jint, jint, jboolean);

/*
 * Class:     nhl_containing_controller_PathFinder
 * Method:    getOccupied
 * Signature: (Ljava/awt/Point;)Z
 */
JNIEXPORT jboolean JNICALL Java_nhl_containing_controller_PathFinder_getOccupied
  (JNIEnv *, jclass, jobject);

/*
 * Class:     nhl_containing_controller_PathFinder
 * Method:    cleanup
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_nhl_containing_controller_PathFinder_cleanup
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
